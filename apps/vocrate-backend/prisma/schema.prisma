// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Vocabulary related fields
  vocabularies Vocabulary[]
  studySessions StudySession[]

  @@map("users")
}

model Vocabulary {
  id          String   @id @default(cuid())
  word        String
  definition  String
  pronunciation String?
  example     String?
  difficulty  Int      @default(1) // 1-5 scale
  mastery     Int      @default(0) // 0-100 scale
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  studyRecords StudyRecord[]

  @@map("vocabularies")
}

model StudySession {
  id        String   @id @default(cuid())
  userId    String
  startTime DateTime @default(now())
  endTime   DateTime?
  score     Int?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  studyRecords StudyRecord[]

  @@map("study_sessions")
}

model StudyRecord {
  id             String   @id @default(cuid())
  vocabularyId   String
  studySessionId String
  isCorrect      Boolean
  responseTime   Int? // in milliseconds
  createdAt      DateTime @default(now())

  vocabulary   Vocabulary   @relation(fields: [vocabularyId], references: [id], onDelete: Cascade)
  studySession StudySession @relation(fields: [studySessionId], references: [id], onDelete: Cascade)

  @@map("study_records")
}
